package com.bazarify.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bazarify.dto.ShippingDTO;
import com.bazarify.model.Customer;
import com.bazarify.service.CustomerService;

@RestController
@RequestMapping("/customers")
public class CustomerController {

	@Autowired
	private CustomerService customerService;
    @Autowired
    private ShippingClient shippingClient;

	@GetMapping
	public List<Customer> getAllCustomers() {
		return customerService.getAllCustomers();
	}

	@GetMapping("/{id}")
	public Optional<Customer> getCustomerById(@PathVariable Long id) {
		return customerService.getCustomerById(id);
	}

	@PostMapping("/customers")
	public Customer createCustomer(@RequestBody Customer customer) {
		return customerService.saveCustomer(customer);
	}

	@PutMapping("/customers/{id}")
	public Customer updateCustomer(@PathVariable Long id, @RequestBody Customer customerDetails) {
		Customer customer = customerService.getCustomerById(id).orElseThrow();

		customer.setFirstName(customerDetails.getFirstName());
		customer.setLastName(customerDetails.getLastName());

		return customerService.saveCustomer(customer);
	}

	@DeleteMapping("/customers/{id}")
	public ResponseEntity<?> deleteCustomer(@PathVariable Long id) {
		Customer customer = customerService.getCustomerById(id).orElseThrow();

		customerService.deleteCustomer(customer);

		return ResponseEntity.ok().build();
	}

	@GetMapping("/{orderId}/shippings")
	public List<ShippingDTO> getShippingsByOrderId(@PathVariable Long orderId) {
		return shippingClient.getShippingByOrderId(orderId);
	}

	// Other endpoints as needed
}
